<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnDangNhap.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAANAAAADQAXljz5QAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAAEYUlEQVRIS4WWb1BUVRjGr2nolz40k/zRD7sogZSJWoz2l22UQdwWCFPJf+G06dTgUFQiruvCNDWI
        mtGkCeg0o2OAsg1hiQstTISTKfUhx5m2jalpjCESgXIFV+Dpfc/dc/dedq0Pz8w9hz3P79z3nvc5KADu
        Lo8Siw7Fik7FRWqh5z5SP8lD4/2kTfAqc6OuDSnqJC2cQSZOUpAEqdHGGAROzcJE2zRtjhQgyC70KPdG
        84qYwNdKKgEu8eLbTTHwvTwH3602oSPDjLanw/pmpRm+wrkINMyUoKukjKl+hgH9YAtplHf4y444zfTb
        Z+fhSmYSfs1OxoBtAYZyUvGHNQX+Vcm4kj0f/Y7Z4TfyKq/oPbUHsXMyH/9yOnpsJmHcmZGI31en4Gbe
        Q/+pQQL+udWESY8o3TgpxwjgmlNZJtqnoSdHNf9hxXwM5aYKg94XH0dT0QY495Zht8uBk68XwrfxqQjQ
        6J54+SZD5PdAGKB+UPiL4jRzXjDy/EJUlb0B84lWLKk7g4LKg9hQeQDLj9YjkebKnaUYeGGJATJed58K
        6VQ+VgHqUQwG3TGi5lwWuXM2WFzXhNrNNgHW62hhLpbV1CP/0BEM5z2sAQIFKZg8O0MtVZcym3dvZeLP
        9jliob7mQ/mPoMuappl6M1OF5Lg5ezEWHXejorQYw6FNse5U3y9LtY3r7+LBRTqKfFrkj6T+IV2mkrHh
        tS8aMfj9BQOkZksOTCfPo922VIOMlVHvqWVqYQB3qCgPH8WpAJaEdOUvR+DabxGQtGNuHLavxQXaIENu
        FSbJN7jKJerjDuUf8jmXpkF3He50NGsKepvxl8eNwcvd9O1ggKzf9z5KHKXiWUIm6biT9wgD+m99OlP8
        kZtIAv4+XYPhts9wo82N62Q8cN6N/tamqIDN71WhyLlHPEtIsGEWA/oY4Jn0KvjqGbPoUAm4Qc9dlkRt
        EetuJXry8Am8u8OujdtJE633aN9gP0HQnWkW7S8B0SDRPvLGkhLEV9bidO4yba57ZaL8yC4GbOKBn0KN
        s0UP4GPauzZdg7Cx3vzD9VmI3XsIa97epc2xfFtDp4haQBF5TpE7Rsn54yq1g6W40RZ80oKDO4vgXfGg
        ZnAmKw0Fb76FhIpqPObaZzD3Uqlvuym5OeqpiQlDUcF5TkTf9nhc13+HvIWo2FksoiK9tgFPlFdhUfkB
        xLo+QFx5NSyOd3DWkmwA/PSStnsne6sAvizozHLY+deZDG/BH95jexQf2ddhu2M30mnHxa/Zcc6SZDBm
        9TxHicqXEd8nHKAagMWXBZGDn0/HzbKECEi3ZV6EoV4Xs8zgqCePURH9Id8wgMWXhZrnIhU5uP4PwjXv
        fTWBdk7Hks350tJ5GgEsviw4zwnCqcjBxdnC7S8h3DOXss3wU0CONYauTC6LbudShoEmviw4z0NvI8Xt
        H6ynS5+bKDzP/xg4Zc2nKmLCIMpzWryNFnMg8qU+QuoTYzWFreI+ibZWCMq/RFCcd2veA/IAAAAASUVO
        RK5CYII=
</value>
  </data>
</root>